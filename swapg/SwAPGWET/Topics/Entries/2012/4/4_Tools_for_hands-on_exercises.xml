<?xml version="1.0"?>
<content collectionGUID="B7AB1949-CE90-4289-A32D-3049187EF0A7">
  <lastEdited clientType="local-build-20120524" date="2012-05-25 01:55:30 +0000"/>
  <textBox id="generic-header-attribute" dynamic="no" visible="yes">
    <richText>Tools</richText>
  </textBox>
  <image id="generic-picture-attributes" dynamic="no" visible="yes" src="4_Tools_for_hands-on_exercises_files/shapeimage_1.png" left="0px" top="0px" width="395px" height="210px"/>
  <textBox id="generic-body-attributes" dynamic="no" visible="yes">
    <richText>Tools and web resources that can be used in class to provide hands-on experience with SwA Concepts&#xD;&#xD;&lt;b&gt;ArgoUML	&#xD;&lt;/b&gt;ArgoUML is the leading open source UML modeling tool and includes support for all standard UML 1.4 diagrams. It runs on any Java platform.	&#xD;Possible Use: Misuse cases, security focused UML class diagrams and other documentation for class assignments and projects. &#xD;&#xD;&lt;b&gt;ASCE	&#xD;&lt;/b&gt;ASCE supports the key assurance case notations: Goal Structuring Notation and Claims-Arguments-Evidence.  Academic license available upon request at &lt;a href="http://www.adelard.com/web/hnav/ASCE/index.html"&gt;http://www.adelard.com/web/hnav/ASCE/index.html&lt;/a&gt;&#xD;Possible use: Assurance case documentation for class assignments and projects, Demonstration of worked examples used on real projects.&#xD;&#xD;&lt;b&gt;Anubis&#xD;&lt;/b&gt;Anubis is a service for the dynamic analysis for unknown binaries, in particular Malware. &#x2028;&lt;a href="http://anubis.iseclab.org/"&gt;http://anubis.iseclab.org/&lt;/a&gt;&#xD;Possible use: Malware analysis &#xD;&#xD;&lt;b&gt;Burp Suite	&#xD;&lt;/b&gt;Burp Suite is an integrated platform for attacking web applications. Located at &lt;a href="http://www.portswigger.net/suite/"&gt;http://www.portswigger.net/suite/&lt;/a&gt;&#xD;Possible use: Burp Suite allows the combination of manual and automated techniques to enumerate, analyze, scan, attack and exploit web applications.&#xD;&#xD;&lt;b&gt;CERT Secure Coding Standards	&#xD;&lt;/b&gt;Secure coding standards for commonly used programming languages such as C, C++ and Java. Located at &lt;a href="https://www.securecoding.cert.org"&gt;https://www.securecoding.cert.org&lt;/a&gt;&#xD;Possible use: Online reference; examples of coding do&#x2019;s and dont&#x2019;s.&#xD;&#xD;&lt;b&gt;FindBugs&lt;/b&gt;&lt;b&gt;TM&lt;/b&gt;&lt;b&gt;	&#xD;&lt;/b&gt;A program which uses static analysis to look for bugs in Java code at &lt;a href="http://findbugs.sourceforge.net"&gt;http://findbugs.sourceforge.net&lt;/a&gt;/&#xD;Possible use: Scan java code repositories for bugs; Introduction to static code checking activities.&#xD;&#xD;&lt;b&gt;Microsoft SDL Threat Modeling Tool	&#xD;&lt;/b&gt;The Microsoft SDL Threat Modeling Tool allows software architects to identify and mitigate potential security issues early, when they are relatively easy and cost-effective to resolve. Located at &lt;a href="http://www.microsoft.com/security/sdl/getstarted/threatmodeling.aspx"&gt;http://www.microsoft.com/security/sdl/getstarted/threatmodeling.aspx&lt;/a&gt;&#xD;Possible use: Conduct student group workshops to discuss threats to various design alternatives, while suggesting possible mitigation strategies.&#xD;&#xD;&lt;b&gt;Olly Debug	&#xD;&lt;/b&gt;OllyDbg is a 32-bit assembly level debugger for Microsoft Windows. Located at &lt;a href="http://www.ollydbg.de"&gt;www.ollydbg.de&lt;/a&gt;/&#xD;Possible use: Emphasize binary code analysis and is particularly useful in cases where source is unavailable. Explain Buffer Overflows.&#xD;&#xD;&lt;b&gt;Pharos	&#xD;&lt;/b&gt;Pharos is an open source proxy that traps all HTTP and HTTPS data between server and client, including cookies and form fields, which can be intercepted and modified. Located at &lt;a href="http://parosproxy.org/index.shtml"&gt;http://parosproxy.org/index.shtml&lt;/a&gt;&#xD;Possible use: Pharos can be used as an introduction to web application security assessment. &#xD;&#xD;&lt;b&gt;SAMATE Reference Dataset	&#xD;&lt;/b&gt;The purpose of the SAMATE Reference Dataset (SRD) is to provide users, researchers, and software security assurance tool developers with a set of known security flaws.  This will allow end users to evaluate tools and tool developers to test their methods.  Located at &lt;a href="http://samate.nist.gov/index.php/Main_Page.html"&gt;http://samate.nist.gov/index.php/Main_Page.html&lt;/a&gt;.  &#xD;Possible use: A reference data set can be used in class to reflect upon known flaws in software.  &#xD;&#xD;&lt;b&gt;SDMetrics	&#xD;&lt;/b&gt;Analyze the structural properties of UML models using object-oriented measures of design size, coupling, and complexity. Located at &lt;a href="http://www.sdmetrics.com"&gt;http://www.sdmetrics.com&lt;/a&gt;/&#xD;Possible use: Examine object-oriented metrics and measures for design and source code artifacts.&#xD;&#xD;&lt;b&gt;Splint	&#xD;&lt;/b&gt;Splint is a tool for statically checking C programs for security vulnerabilities and coding mistakes. Located at &lt;a href="http://www.splint.org"&gt;http://www.splint.org&lt;/a&gt;/&#xD;Possible use: Static analysis code checking activities.&#xD;&#xD;&lt;b&gt;Valgrind&#xD;&lt;/b&gt;Valgrind is an instrumentation framework for building dynamic analysis tools. Located at &lt;a href="http://valgrind.org"&gt;http://valgrind.org&lt;/a&gt;/&#xD;Possible use: Demonstrate dynamic analysis techniques to detect memory management and threading bugs, as well as detailed program profiling.&#xD;&#xD;&lt;b&gt;Vine	&#xD;&lt;/b&gt;Provides an intermediate language that  x86 code can be translated to for Static analysis. Located at &lt;a href="http://bitblaze.cs.berkeley.edu/vine.html"&gt;http://bitblaze.cs.berkeley.edu/vine.html&lt;/a&gt;&#xD;Possible use: Identify data flows analysis and conduct binary analysis.&#xD;&#xD;&lt;b&gt;Web Resources&#xD;&lt;/b&gt;&#xD;Google Code University&#xD;&lt;a href="http://google-gruyere.appspot.com"&gt;http://google-gruyere.appspot.com&lt;/a&gt;&#xD;Web application exploits and defenses. Topics include cross-site scripting, cross site request forgery, AJAX vulnerabilities, denial of service, etc.&#xD;&#xD;OWASP Learning Environments	&#xD;&lt;a href="http://www.owasp.org/index.php/Phoenix/Tools"&gt;http://www.owasp.org/index.php/Phoenix/Tools&lt;/a&gt;&#xD;Comprehensive collection of security tools, exploits, vulnerability scanners, defensive tools, application security.&#xD;&#xD;OWASP Web Goat	&#xD;&lt;a href="http://www.owasp.org/index.php/OWASP_WebGoat_Project"&gt;http://www.owasp.org/index.php/OWASP_WebGoat_Project&lt;/a&gt;&#xD;WebGoat is a deliberately insecure J2EE web application maintained by OWASP designed to teach web application security lessons.&#xD;&#xD;OWASP Broken Web Applications Project	&#xD;&lt;a href="http://www.owasp.org/index.php/OWASP_Broken_Web_Applications_Project"&gt;http://www.owasp.org/index.php/OWASP_Broken_Web_Applications_Project&lt;/a&gt;&#xD;A collection of applications with known vulnerabilities.&#xD;&#xD;Software Assurance (SwA) Tools Overview 	&#xD;&lt;a href="https://buildsecurityin.us-cert.gov/swa/swa_tools.html"&gt;https://buildsecurityin.us-cert.gov/swa/swa_tools.html&lt;/a&gt;&#xD;A collection of SwA tools inspired by the NIST Software Assurance Metrics And Tool Evaluation (SAMATE) project.&#xD;</richText>
  </textBox>
  <textBox id="generic-title-attributes" dynamic="no" visible="yes">
    <richText>Tools for hands-on exercises</richText>
  </textBox>
  <textBox id="generic-datefield-attributes" dynamic="no" visible="yes">
    <richText>&lt;b&gt;4/4/12&lt;/b&gt;</richText>
  </textBox>
</content>
