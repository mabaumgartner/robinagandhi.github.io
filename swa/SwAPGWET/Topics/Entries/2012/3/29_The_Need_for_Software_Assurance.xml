<?xml version="1.0"?>
<content collectionGUID="B7AB1949-CE90-4289-A32D-3049187EF0A7">
  <lastEdited clientType="local-build-20120524" date="2012-05-25 01:55:39 +0000"/>
  <textBox id="generic-header-attribute" dynamic="no" visible="yes">
    <richText>The Need</richText>
  </textBox>
  <image id="generic-picture-attributes" dynamic="no" visible="yes" src="29_The_Need_for_Software_Assurance_files/shapeimage_1.png" left="0px" top="0px" width="395px" height="210px"/>
  <textBox id="generic-body-attributes" dynamic="no" visible="yes">
    <richText>Current events related to cybersecurity encourage a fundamental shift in the way we think about educating and training a workforce prepared to address security issues in all phases of a software system.  Software assurance education and training touches on software engineering (including its many sub-disciplines), systems engineering, project management, and other disciplines (shown in chart Key SwA Knowledge Areas and Efforts, page 6). The goal is to fit the workforce with the ability to identify and acquire the competencies associated with secure software.  The primary audiences for this pocket guide are educators and trainers who can use this guide to identify resources to supplement their efforts as well as to identify strategies to inject software assurance related topics in the existing education and training programs. &#xD;&#xD;The objective of software assurance is to ensure that the processes, procedures, and products used to produce and sustain the software conform to all specified requirements and standards. Software assurance in its broader sense refers to the assurance of any required property of software.  However, in the context of this pocket guide, software assurance is concerned with assuring the security of software.&#xD;&#xD;Building secure software requires a workforce that understands the processes and technologies that provide the basis for belief that software will consistently exhibit all properties required to ensure that the software will operate as expected, despite the presence of faults introduced by a malicious adversary.  The Ware Report (1969) identified that:&#xD;&#xD;&#x201C;Probably the most serious risk in system software is incomplete design, in the sense that inadvertent loopholes exist in the protective barriers and have not been foreseen by the designers.&#x201D;&#xD;&#xD;Later the Anderson Report (1972) clearly established the technical problem to be solved as that of:&#xD;&#xD;&#x201C;&#x2026;determining what constitutes an appropriate defense against malicious attack, and then developing hardware and software with the defensive mechanisms built in.&#x201D;&#xD;&#xD;Nearly forty years after, as we find ourselves in the midst of a highly interconnected cyber infrastructure, the need for a workforce with better skills to build security in cannot be emphasized enough.  The objective is to enable a workforce competent in managing, designing, implementing and evaluating systems that can enforce security policies and fulfill security expectations.  This workforce should be able to develop a well-reasoned and audit-able basis for believing that the software will function as expected, i.e. have justifiable arguments to questions such as: &#xD;&#xD;How secure is your software? &#xD;What is it secure against?&#xD;How does it achieve its security goals?&#xD;&#xD;This Pocket Guide presents a general map of the areas of knowledge to cover in order to build security into software.  The guide organizes the resources available for SwA outreach by avenue of approach:  student curricula, workforce improvement, injection of subject-area material into related disciplines, credentialing, awareness, and independent study.&#xD;&#xD;RESOURCES&#xD;&#xD;Willis Ware, Security Controls for Computer Systems (U): Report of Defense Science Board Task Force on Computer Security; Rand Report R609-1, The RAND Corporation, Santa Monica, CA, Feb. 1970.&#xD;&#xD;James P. Anderson, Computer Security Technology Planning Study, ESD-TR-73-51, ESD/AFSC, Hanscom AFB, Bedford, MA 01731, Oct. 1972&#xD;</richText>
  </textBox>
  <textBox id="generic-title-attributes" dynamic="no" visible="yes">
    <richText>The Need for Software Assurance</richText>
  </textBox>
  <textBox id="generic-datefield-attributes" dynamic="no" visible="yes">
    <richText>&lt;b&gt;3/29/12&lt;/b&gt;</richText>
  </textBox>
</content>
