<?xml version="1.0"?>
<content collectionGUID="B7AB1949-CE90-4289-A32D-3049187EF0A7">
  <lastEdited clientType="local-build-20120524" date="2012-05-25 01:55:29 +0000"/>
  <textBox id="generic-header-attribute" dynamic="no" visible="yes">
    <richText>Making a Case</richText>
  </textBox>
  <image id="generic-picture-attributes" dynamic="no" visible="yes" src="30_The_Case_for_SwA_Education_files/shapeimage_1.png" left="0px" top="0px" width="395px" height="210px"/>
  <textBox id="generic-body-attributes" dynamic="no" visible="yes">
    <richText>Software size and complexity obscures intent and precludes exhaustive testing. Outsourcing and use of un-vetted software supply chains increases risk. Attack sophistication now eases exploitation. These factors contribute to the increase of risks to software-enabled capabilities and the threat of asymmetric attack.  A broad range of stakeholders now need confidence that the software which enables their core business operations can be trusted to perform (even under attempted exploitation).  &#xD;&#xD;In their report to the President, in the chapter entitled &#x201C;Software Is a Major Vulnerability&#x201D;, the President&#x2019;s Information Technology Advisory Committee (PITAC) summed up the problem of non-secure software concisely and accurately:&#xD;&#xD;&#x201C;Network connectivity provides &#x201C;door-to-door&#x201D; transportation for attackers, but vulnerabilities in the software residing in computers substantially compound the cyber security problem.  As the PITAC noted in a 1999 report, the software development methods that have been the norm fail to provide the high quality, reliable, and secure software that the Information Technology infrastructure requires.  &#xD;&#xD;Software development is not yet a science or a rigorous discipline, and the development process by and large is not controlled to minimize the vulnerabilities that attackers exploit.  Today, as with cancer, vulnerable software can be invaded and modified to cause damage to previously healthy software, and infected software can replicate itself and be carried across networks to cause damage in other systems.  Like cancer, these damaging processes may be invisible to the lay person even though experts recognize that their threat is growing.  And as in cancer, both preventive actions and research are critical, the former to minimize damage today and the latter to establish a foundation of knowledge and capabilities that will assist the cyber security professionals of tomorrow reduce risk and minimize damage for the long term.  &#xD;&#xD;Vulnerabilities in software that are introduced by mistake or poor practices are a serious problem today.  In the future, the Nation may face an even more challenging problem as adversaries - both foreign and domestic &#x2013; become increasingly sophisticated in their ability to insert malicious code into critical software.&#x201D;&#xD;&#xD;It is clear that to produce, acquire, and sustain secure software, a framework that identifies workforce needs for competencies, leverages sound practices, and guides curriculum development for education and training relevant to software assurance is inevitable.  Because software quality assurance and software engineering have evolved bodies of knowledge that do not explicitly address security as a quality attribute, a workforce education and training framework must also identify the integration point of secure software development techniques and practices in the existing programs nationwide.&#xD;&#xD;RESOURCES&#xD;&#xD;President&#x2019;s Information Technology Advisory Committee (PITAC) Report, Cyber Security: A Crisis of Prioritization, February 2005</richText>
  </textBox>
  <textBox id="generic-title-attributes" dynamic="no" visible="yes">
    <richText>The Case for SwA Education</richText>
  </textBox>
  <textBox id="generic-datefield-attributes" dynamic="no" visible="yes">
    <richText>&lt;b&gt;3/30/12&lt;/b&gt;</richText>
  </textBox>
</content>
