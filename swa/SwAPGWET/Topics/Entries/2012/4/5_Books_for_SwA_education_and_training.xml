<?xml version="1.0"?>
<content collectionGUID="B7AB1949-CE90-4289-A32D-3049187EF0A7">
  <lastEdited clientType="local-build-20120524" date="2012-05-25 01:55:32 +0000"/>
  <textBox id="generic-header-attribute" dynamic="no" visible="yes">
    <richText>Books</richText>
  </textBox>
  <image id="generic-picture-attributes" dynamic="no" visible="yes" src="5_Books_for_SwA_education_and_training_files/shapeimage_1.png" left="0px" top="0px" width="395px" height="210px"/>
  <textBox id="generic-body-attributes" dynamic="no" visible="yes">
    <richText>A list of Software Assurance focused books for use in education and training programs&#xD;&#xD;&lt;b&gt;Attack Patterns, Reverse Engineering&#xD;&lt;/b&gt;Implementation level issues	Exploiting Software: How to Break Code by Greg Hoglund and Gary McGraw, Addison Wesley, 2004	&#xD;Understanding attack strategies to build better defenses. Case studies for class discussion. &lt;a href="http://www.exploitingsoftware.com"&gt;http://www.exploitingsoftware.com&lt;/a&gt;/&#xD;&#xD;Design Principles and Techniques	High-Assurance Design: Architecting Secure and Reliable Enterprise Applications, Clifford J. Berg, Addison-Wesley Professional 2005.	&#xD;Basic principles and techniques that can be applied to the development of business applications. &#xD;&#xD;&lt;b&gt;Information Security	&#xD;&lt;/b&gt;Building a Secure Computer System, Morrie Gasser, 1988&#xD;Good reading for Information Security basics. &#xD;&#xD;&lt;b&gt;Principles and guidelines, Implementation level issues	&#xD;&lt;/b&gt;24 Deadly Sins of Software Security: Programming Flaws and How to Fix Them Michael Howard, David LeBlanc, John Viega, McGraw-Hill Osborne Media, 2009	&#xD;Identifies the most common design and coding errors, their fixes and avoidance strategies.&#xD;&#xD;Secure Coding in C and C++, Robert Seacord, Addison-Wesley Professional, 2005	&#xD;Examples of secure code, insecure code, and exploits, implemented for Windows and Linux. &lt;a href="http://www.cert.org/books/secure-coding/"&gt;http://www.cert.org/books/secure-coding/&lt;/a&gt;&#xD;&#xD;Secure Programming for Linux and Unix HOWTO, David Wheeler, 2003	&#xD;Unix systems-specific guidelines for C, C++, Java, Perl, PHP, Python, Tcl, and Ada95. &lt;a href="http://www.dwheeler.com/secure-programs/"&gt;http://www.dwheeler.com/secure-programs/&lt;/a&gt;&#xD;&#xD;Building Secure Software: How to Avoid Security Problems the Right Way, John Viega and Gary McGraw, Addison Wesley, 2002	&#xD;Software Assurance principles and guidelines and Implementation level issues Possible use as a textbook or additional reference material.&#xD;&#xD;&lt;b&gt;Software Assurance in SDLC	&#xD;&lt;/b&gt;Secure and Resilient Software Development, Mark S. Merkow, Lakshmikanth Raghavan, Auerbach Publications, 2010	&#xD;A practitioner&#x2019;s perspective on enterprise assurance programs.&#xD;&#xD;Software Security Engineering: A Guide for Project Managers, Julia Allen, Sean Barnum, Robert J. Ellison, Gary McGraw, Nancy R. Mead, Addison-Wesley, 2008 (ISBN 032150917X).	&#xD;Software Security Engineering draws extensively on the systematic approach developed for the Build Security In (BSI) Web site. &lt;a href="http://www.softwaresecurityengineering.com"&gt;http://www.softwaresecurityengineering.com&lt;/a&gt;&#xD;&#xD;The Security Development Lifecycle: SDL: A Process for Developing Demonstrably More Secure Software, Michael Howard, Steve Lipner, Microsoft Press, 2006	&#xD;Adaptation of Microsoft&#x2019;s Security Development Lifecycle (SDL) with case-studies on several Microsoft products.&#xD;&#xD;Software Security: Building Security In, Gary McGraw, Addison-Wesley Professional, 2006.	&#xD;Introduction to Software Security Touchpoints during software development. Possible use as a textbook or additional reference material.&#xD;&#xD;Secure Coding: Principles and Practices, Mark G. Graff and Kenneth R. van Wyk, O&#x2019;Reilly, 2003	&#xD;A practical approach to integrating SwA topics into the SDLC. Great for assignment of additional readings that complement classroom materials. &lt;a href="http://www.securecoding.org"&gt;http://www.securecoding.org&lt;/a&gt;/&#xD;&#xD;&lt;b&gt;Standards-based SwA Solutions	&#xD;&lt;/b&gt;System Assurance: Beyond Detecting Vulnerabilities , Nikolai Mansourov and Djenana Campara, Morgan Kaufmann Publishers, Elsevier, 2011(ISBN: 978-0-12-381414-2	&#xD;The Object Management Group (OMG) Software Assurance Ecosystem described in this book is a significant step towards collaborative cyber security automation; it offers a standards-based solution for building security and resilience in computer systems.&#xD;&#xD;&lt;b&gt;Static Analysis	&#xD;&lt;/b&gt;Secure Programming with Static Analysis, Brian Chess, Jacob West, Addison Wesley, 2007.	&#xD;Detailed discussion of security issues in several open source applications; steps in the static analysis process.&#xD;&#xD;</richText>
  </textBox>
  <textBox id="generic-title-attributes" dynamic="no" visible="yes">
    <richText>Books for SwA education and training</richText>
  </textBox>
  <textBox id="generic-datefield-attributes" dynamic="no" visible="yes">
    <richText>&lt;b&gt;4/5/12&lt;/b&gt;</richText>
  </textBox>
</content>
